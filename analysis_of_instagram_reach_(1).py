# -*- coding: utf-8 -*-
"""analysis  of instagram reach .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pi3cCbJ11h4cXeFRRThn7mfkQEC_ALmR
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator
from sklearn.model_selection import train_test_split
from sklearn.linear_model import PassiveAggressiveRegressor

from google .colab import files

uploaded = files.upload()  ## uploading data set from locar drive

import io

rud = pd.read_csv("Instagram1.csv", encoding = 'latin1')  ### to convert data in to data frame
print(rud.head())

rud.info()  ## to see the basic information about data set

rud.columns ## to see the columns in data set

rud.isnull().sum() ### to see the null values

plt.figure(figsize=(10, 8))
plt.style.use('fivethirtyeight')
plt.title("Distribution of Impressions From Home")
sns.distplot(rud['From Home'])
plt.show()

plt.figure(figsize=(10, 8))
plt.title("Distribution of Impressions From Hashtags")
sns.distplot(rud['From Hashtags'])
plt.show()

plt.figure(figsize=(10, 8))
plt.title("Distribution of Impressions From Explore")
sns.distplot(rud['From Explore'])
plt.show()

home = rud["From Home"].sum()
hashtags = rud["From Hashtags"].sum()
explore = rud["From Explore"].sum()
other = rud["From Other"].sum()

labels = ['From Home','From Hashtags','From Explore','Other']
values = [home, hashtags, explore, other]

fig = px.pie(rud, values=values, names=labels, 
             title='Impressions on Instagram Posts From Various Sources', hole=0.5)
fig.show()

"""from the aboce chart it is understood trhat  approx 50 percent of reach   coming from my followers  and  from hastags  the contribution is 38.1 percent,similarly reach from explore  the contribution is 9.14 percent  and 3.01 percent come from oter sources.

"""

text = " ".join(i for i in data.Caption)
stopwords = set(STOPWORDS)
wordcloud = WordCloud(stopwords=stopwords, background_color="yellow").generate(text)
plt.style.use('classic')
plt.figure( figsize=(12,10))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()

figure = px.scatter(data_frame = rud, x="Impressions",
                    y="Likes", size="Likes", trendline="ols", 
                    title = "Relationship Between Likes and Impressions")
figure.show()

figure = px.scatter(data_frame = rud, x="Impressions",
                    y="Comments", size="Comments", trendline="ols", 
                    title = "Relationship Between Comments and Total Impressions")
figure.show()

figure = px.scatter(data_frame = rud, x="Impressions",
                    y="Shares", size="Shares", trendline="ols", 
                    title = "Relationship Between Shares and Total Impressions")
figure.show()

figure = px.scatter(data_frame = rud, x="Impressions",
                    y="Saves", size="Saves", trendline="ols", 
                    title = "Relationship Between Post Saves and Total Impressions")
figure.show()

correlation = rud.corr()
print(correlation["Impressions"].sort_values(ascending=False))

"""So we can say that more likes and saves will help you get more reach on Instagram. The higher number of shares will also help you get more reach, but a low number of shares will not affect your reach either.

"""

x = np.array(rud[['Likes', 'Saves', 'Comments', 'Shares', 
                   'Profile Visits', 'Follows']])
y = np.array(rud["Impressions"])
xtrain, xtest, ytrain, ytest = train_test_split(x, y, 
                                                test_size=0.2, 
                                                random_state=42)

model = PassiveAggressiveRegressor()
model.fit(xtrain, ytrain)
model.score(xtest, ytest)

"""Now letâ€™s predict the reach of an Instagram post by giving inputs to the machine learning model,taking features as :Features = [['Likes','Saves', 'Comments', 'Shares', 'Profile Visits"""

features = np.array([[282.0, 233.0, 4.0, 9.0, 165.0, 54.0]])
model.predict(features)